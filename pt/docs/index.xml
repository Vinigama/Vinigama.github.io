<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IF-Study – Documentação</title><link>https://vinigama.github.io/pt/docs/</link><description>Recent content in Documentação on IF-Study</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://vinigama.github.io/pt/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Diagrama de caso de uso UML</title><link>https://vinigama.github.io/pt/docs/conceitos/caso_uso/</link><pubDate>Thu, 24 Nov 2022 00:00:00 +0000</pubDate><guid>https://vinigama.github.io/pt/docs/conceitos/caso_uso/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Diagrama de caso de uso UML&lt;/p>
&lt;/div>
&lt;h1 id="diagrama">Diagrama&lt;/h1>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Conceitos/images/caso_uso.png" alt="">&lt;/p></description></item><item><title>Docs: Classificador de comentário</title><link>https://vinigama.github.io/pt/docs/conceitos/classificador_comentario/</link><pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate><guid>https://vinigama.github.io/pt/docs/conceitos/classificador_comentario/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Esta página visa trazer com detalhes a implementação do classificador de comentário.&lt;/p>
&lt;/div>
&lt;h1 id="classificador">Classificador&lt;/h1>
&lt;p>Para medir o sentimento do comentário, foi utilizado as bibliotecas de linguagem de processamento natural e de machine learning. Foi utilizado dois &lt;code>dataframes&lt;/code> que seria de comentários de filmes e de palavrões.&lt;/p>
&lt;p>Passo a passo de como foi criado o classificador:&lt;/p>
&lt;ol>
&lt;li>Leitura dos dois dataframes&lt;/li>
&lt;li>Junção dos dataframes&lt;/li>
&lt;li>Importação da biblioteca tagger que verifica as classes das palavras. Ex: substantivo, adjetivo etc&lt;/li>
&lt;li>Tokenização dos comentários&lt;/li>
&lt;li>Remoção de ruídos dos comentários e lematização&lt;/li>
&lt;li>Separação das palavras que tem classificação positiva e negativa&lt;/li>
&lt;li>Criação do dataframe verificando se o comentário é positivo ou negativo&lt;/li>
&lt;li>Treinamento do modelo com dataframe&lt;/li>
&lt;li>Exportação do &lt;code>Naive Bayer&lt;/code> treinado&lt;/li>
&lt;/ol>
&lt;h2 id="clasificador-no-projeto">Clasificador no projeto&lt;/h2>
&lt;p>Na hora que o usuário sinaliza o comentário, o sistema passar pelas seguintes funções antes de atribuir no modelo:&lt;/p>
&lt;p>&lt;strong>remove_noise&lt;/strong>: remoção de ruídos de comunicação. Exemplo: caracteres especiais.&lt;/p>
&lt;pre>&lt;code> def remove_noise(self, tokens, stop_words = ()):
&amp;quot;&amp;quot;&amp;quot; Remoção de ruídos de comunicação &amp;quot;&amp;quot;&amp;quot;
cleaned_tokens = []
for token, tag in self.tagger.tag(tokens):
token = re.sub('http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&amp;amp;+#]|[!*\(\),]|'\
'(?:%[0-9a-fA-F][0-9a-fA-F]))+','', token)
token = re.sub(&amp;quot;(@[A-Za-z0-9_]+)&amp;quot;,&amp;quot;&amp;quot;, token)
if tag.startswith(&amp;quot;N&amp;quot;):
pos = 'n'
elif tag.startswith('V'):
pos = 'v'
else:
pos = 'a'
lemmatizer = WordNetLemmatizer()
token = lemmatizer.lemmatize(token, pos)
if len(token) &amp;gt; 0 and token not in string.punctuation and token.lower() not in stop_words:
cleaned_tokens.append(token.lower())
return cleaned_tokens
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>lemmatize_sentence&lt;/strong>: Lematização das palavras. Função para reduzir uma palavra à sua forma base e agrupar diferentes formas da mesma palavra.&lt;/p>
&lt;pre>&lt;code>def lemmatize_sentence(self, tokens):
&amp;quot;&amp;quot;&amp;quot; Função para reduzir uma palavra à sua forma base e agrupar diferentes formas da mesma palavra&amp;quot;&amp;quot;&amp;quot;
lemmatizer = WordNetLemmatizer()
lemmatized_sentence = []
for word, tag in self.tagger.tag(tokens):
if tag.startswith('N'):
pos = 'n'
elif tag.startswith('V'):
pos = 'v'
else:
pos = 'a'
lemmatized_sentence.append(lemmatizer.lemmatize(word, pos))
return lemmatized_sentence
&lt;/code>&lt;/pre>
&lt;p>Após passar pelos dois processos, o comentário é passado como parâmetro para o modelo, onde verifica se o comentário é positivo ou negativo.&lt;/p></description></item><item><title>Docs: Sinalização de comentário - Administrador</title><link>https://vinigama.github.io/pt/docs/conceitos/sinalizacao_comentario/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://vinigama.github.io/pt/docs/conceitos/sinalizacao_comentario/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Esta página visa trazer com detalhes a implementação das funcionalidades de sinalizar e apurar comentários&lt;/p>
&lt;/div>
&lt;h1 id="fluxo">Fluxo&lt;/h1>
&lt;h2 id="sinalizar-comentário">Sinalizar comentário&lt;/h2>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Conceitos/images/fluxo_sinalizacao_comentario.png" alt="">&lt;/p>
&lt;h2 id="apurar-sinalização">Apurar sinalização&lt;/h2>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Conceitos/images/fluxo_apuracao_comentario.png" alt="">&lt;/p>
&lt;h2 id="histórico-de-sinalizações">Histórico de sinalizações&lt;/h2>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Conceitos/images/fluxo_historico_sinalizacoes_comentarios.png" alt="">&lt;/p>
&lt;h1 id="utilização">Utilização&lt;/h1>
&lt;p>O Model &lt;code>SinalizacaoComentario&lt;/code> é o componente responsável pela sinalização de comentário. Quando o usuário sinaliza um comentário o sistema faz uma média ponderada para saber se o comentário sinalizado possui teor negativo ou não, se o comentário possuir uma classificação diferente de positivo é apresentado para o administrador na página de sinalizações de comentários.&lt;/p>
&lt;p>O Administrador fica responsável de escolher as opções de &lt;strong>remover&lt;/strong> ou de classificar como &lt;strong>ok&lt;/strong>. Se o administrador escolher a opção de &lt;strong>remover&lt;/strong>, o comentário será removido e será gerado uma entrada de histórico no &lt;code>HistoricoSinalizacaoComentario&lt;/code>, caso o administrador escolher a opção &lt;strong>parecer ok&lt;/strong>, apenas a sinalização será removida.&lt;/p></description></item><item><title>Docs: Sinalização de conteúdo - Administrador</title><link>https://vinigama.github.io/pt/docs/conceitos/sinalizacao_conteudo/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://vinigama.github.io/pt/docs/conceitos/sinalizacao_conteudo/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Esta página visa trazer com detalhes a implementação das funcionalidades de sinalizar e apurar conteúdos&lt;/p>
&lt;/div>
&lt;h1 id="fluxo">Fluxo&lt;/h1>
&lt;h2 id="sinalizar-conteúdo">Sinalizar conteúdo&lt;/h2>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Conceitos/images/fluxo_sinalizacao_conteudo.png" alt="">&lt;/p>
&lt;h2 id="apuração-da-sinalização">Apuração da sinalização&lt;/h2>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Conceitos/images/fluxo_apuracao_conteudo.png" alt="">&lt;/p>
&lt;h2 id="solicitar-edição">Solicitar edição&lt;/h2>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Conceitos/images/fluxo_sinalizacao_conteudo_edicao.png" alt="">&lt;/p>
&lt;h2 id="histórico-de-sinalizações">Histórico de sinalizações&lt;/h2>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Conceitos/images/fluxo_historico_sinalizacoes_conteudos.png" alt="">&lt;/p>
&lt;h1 id="utilização">Utilização&lt;/h1>
&lt;p>O Model &lt;code>SinalizacaoConteudo&lt;/code> é o componente responsável pela sinalização de conteúdo. Quando o usuário faz uma sinalização de conteúdo o sistema faz uma condição para saber se o conteúdo sinalizado possui teor negativo ou não. A condição é realizada através dos percentuais dos dislikes e de sinalizações, se conteúdo possuir um percentual de sinalizações maior que 40 e de dislikes maior que 10, o conteúdo é categorizado como negativo.&lt;/p>
&lt;p>O Administrador fica responsável de analisar o conteúdo, se for apontado algum tipo de irregularidade na análise administrador, o próprio enviará uma notificação via email falando com detalhes sobre as irregularidades.&lt;/p></description></item><item><title>Docs: Sinalização de perfil - Administrador</title><link>https://vinigama.github.io/pt/docs/conceitos/sinalizacao_perfil/</link><pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate><guid>https://vinigama.github.io/pt/docs/conceitos/sinalizacao_perfil/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Esta página visa trazer com detalhes a implementação das funcionalidades de sinalizar e apurar perfil&lt;/p>
&lt;/div>
&lt;h1 id="fluxo">Fluxo&lt;/h1>
&lt;h2 id="sinalizar-perfil">Sinalizar perfil&lt;/h2>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Conceitos/images/fluxo_sinalizacao_perfil.png" alt="">&lt;/p>
&lt;h2 id="perfil-notificado">Perfil notificado&lt;/h2>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Conceitos/images/fluxo_perfil_notificado.png" alt="">&lt;/p>
&lt;h2 id="histórico-de-sinalizações">Histórico de sinalizações&lt;/h2>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Conceitos/images/fluxo_historico_sinalizacoes_perfis.png" alt="">&lt;/p>
&lt;h1 id="utilização">Utilização&lt;/h1>
&lt;p>O Model &lt;code>SinalizacaoPerfil&lt;/code> é o componente responsável pela sinalização de perfil. Quando o usuário sinaliza um perfil o sistema verifica se o perfil possui mais de 10 sinalizações, se sim, a sinalização fica com a classificação negativa, assim, aparecendo para o administrador apurar.&lt;/p>
&lt;p>O Administrador fica responsável de escolher as seguintes opções para apurar a sinalização:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Excluir:&lt;/strong> deleta o perfil do usuário e também a sinalização&lt;/li>
&lt;li>&lt;strong>Parece ok:&lt;/strong> deleta apenas a sinalização&lt;/li>
&lt;li>&lt;strong>Enviar notificação:&lt;/strong> envia notificação com as modificações necessárias para o usuário alterar&lt;/li>
&lt;li>&lt;strong>Silenciar:&lt;/strong> silencia usuário por 15 ou 30 dias, impedindo dele comentar nos conteúdos&lt;/li>
&lt;/ul></description></item><item><title>Docs: Seção Comentário</title><link>https://vinigama.github.io/pt/docs/conceitos/aba_comentario/</link><pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate><guid>https://vinigama.github.io/pt/docs/conceitos/aba_comentario/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>A seção &lt;strong>Comentário&lt;/strong> na exibição do conteúdo foi criada para que o criador do conteúdo e os alunos possam utilizar esse meio como uma interação.&lt;/p>
&lt;/div>
&lt;h1 id="conceito-geral">Conceito Geral&lt;/h1>
&lt;p>O objetivo da aba comentários na exibição do conteúdo é trazer uma interação relacionado ao conteúdo. Todos os espectadores podem fazer comentários e também responder outros comentários. O espectador que criar comentário pode apagar o seu próprio comentário e também pode sinalizar e atribuir &lt;code>like/dislike&lt;/code> nos outros comentários.&lt;/p>
&lt;p>Logo abaixo da exibição do conteúdo, irá ter uma barra de comentários e um botão enviar desativado, quando o espectador digitar algo na barra de comentários o botão ficará ativado. O comentário digitado precisa possuir no mínimo 1 caractere e no máximo 255 caractere, se o comentário não atingir o tamanho proposto é exibido um alerta.&lt;/p>
&lt;h1 id="benefícios">Benefícios&lt;/h1>
&lt;p>Benefícios de deixar comentários em outros vídeos:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Você se estabelece como um especialista.&lt;/strong> Se seus comentários forem bem escritos e cheios de informações úteis, outras pessoas tomarão nota do seu conhecimento e talvez pedirão mais conselhos.&lt;/li>
&lt;li>&lt;strong>Você se conecta com novas pessoas.&lt;/strong> Comentar vídeos é uma maneira gratuita e rápida de fazer com que sua voz seja ouvida por um novo público.&lt;/li>
&lt;li>&lt;strong>Você aumentará suas visualizações de vídeo e visualizações de perfil.&lt;/strong> Se você disser algo interessante e único, outros espectadores clicarão em seu perfil, consumirão seus conteúdos.&lt;/li>
&lt;/ul>
&lt;h1 id="funções">Funções&lt;/h1>
&lt;p>Para construir a seção comentário, foi necessário as seguintes funções:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>$(&amp;quot;#input-comentario&amp;quot;).keyup(function()})&lt;/strong> - Funcionalidade para ativar o botão enviar quando um caractere for digitado no &lt;code>input text&lt;/code> comentário;&lt;/li>
&lt;li>&lt;strong>function adicionarComentario(comentario, usuario, comentarioId)}&lt;/strong> - Função para adicionar um card comentário contendo o nome do usuário e comentário dinamicamente dentro da &lt;code>div secao-comentario&lt;/code>;&lt;/li>
&lt;li>&lt;strong>function alertaComentario(text)&lt;/strong> - Exibi um modal de alerta com text de acordo que passar como parâmetro;&lt;/li>
&lt;li>&lt;strong>$( &amp;ldquo;#enviar_comentario&amp;rdquo; ).click(function()});&lt;/strong> - Funcionalidade que envia para o banco de dados o comentário via &lt;code>AJAX&lt;/code>. Essa funcionalidade possui restrições de caracteres, o tamanho de caracteres que ser maior que 1 e menor que 255, se não atingir encaixar no tamanho proposto é chamado a &lt;code>function alertaComentario(text)&lt;/code>;&lt;/li>
&lt;li>&lt;strong>function likeComentario(elem)&lt;/strong> - Função para vincular o usuário que clicou no &lt;code>button like&lt;/code> com o comentário via AJAX;&lt;/li>
&lt;li>&lt;strong>function dislikeComentario(elem)&lt;/strong> - Função para vincular o usuário que clicou no &lt;code>button dislike&lt;/code> com o comentário via AJAX;&lt;/li>
&lt;li>&lt;strong>function dinamicoDislike(botaoLike, botaoDislike, quantidadeLike, quantidadeDislike)&lt;/strong> - Funcionalidade para alterar o visual do botão &lt;code>dislike&lt;/code> quando for clicado, para sinalizar que o usuário está vinculado com o botão. Outra funcionalidade da função é a quantidade de &lt;code>dislike&lt;/code> que é alterado quando houver contato com o &lt;code>button&lt;/code>&lt;/li>
&lt;li>&lt;strong>function dinamicoLike(botaoLike, botaoDislike, quantidadeLike, quantidadeDislike)&lt;/strong> - Funcionalidade para alterar o visual do botão &lt;code>like&lt;/code> quando for clicado, para sinalizar que o usuário está vinculado com o botão. Outra funcionalidade da função é a quantidade de &lt;code>like&lt;/code> que é alterado quando houver contato com o &lt;code>button&lt;/code>;&lt;/li>
&lt;li>&lt;strong>function enviarResposta(elem)&lt;/strong> - Função para adicionar resposta ao comentário;&lt;/li>
&lt;li>&lt;strong>function adicionarResposta(elem, comentario, usuario, comentarioId)&lt;/strong> - Função para adicionar um card resposta contendo o nome do usuário e a resposta;&lt;/li>
&lt;li>&lt;strong>function responder(elem)&lt;/strong> - Quando o usuário clicar no &lt;code>responder&lt;/code> em um comentário é exibido o &lt;code>input text resposta&lt;/code>&lt;/li>
&lt;li>&lt;strong>function ajaxSend(data, url)&lt;/strong> - Requisição AJAX. Essa funcionalidade é composta pela função AJAX do Jquery para fazer requisições assíncronas;&lt;/li>
&lt;li>&lt;strong>function deletarComentario(elem, id)&lt;/strong> - Função para deletar o comentário. Quando o usuário clicar no botão deletar é exibido um &lt;code>modal&lt;/code>, confirmando se realmente ele quer deletar, quando ele clicar em sim, o &lt;code>card&lt;/code> comentário é removido dinamicamente;&lt;/li>
&lt;li>&lt;strong>function accordionResposta(elem)&lt;/strong> - Função que atualiza a quantidade de respostas que está atrelado com o comentário;&lt;/li>
&lt;li>&lt;strong>function htmlEncode(str)&lt;/strong> - Funcionalidade que transforma um script para text, evitando ataque XSS;&lt;/li>
&lt;/ul></description></item><item><title>Docs: Admin Editable - Itens Editáveis por Administrador</title><link>https://vinigama.github.io/pt/docs/conceitos/admin_editable/</link><pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate><guid>https://vinigama.github.io/pt/docs/conceitos/admin_editable/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>A funcionalidade do &lt;strong>Admin Editable&lt;/strong> foi criada para facilitar o trabalho com itens que devem ser editáveis para o &lt;strong>Administrador do sistema&lt;/strong>.&lt;/p>
&lt;/div>
&lt;h1 id="conceito-geral">Conceito Geral&lt;/h1>
&lt;p>A ideia do &lt;strong>Admin Editable&lt;/strong> é abstrair o máximo possível a criação de elementos editáveis pelo administrador. A solução alcança este objetivo ao vincular este elemento, representado na tela, ao seu equivalente na tela de administração do Django.&lt;/p>
&lt;p>Por padrão, a solução criará automaticamente um botão no canto superior direito do componente onde ele é aplicado. Este comportamento padrão é possível com a criação de uma &lt;code>div&lt;/code> wrapper que será pai do componente, logo o botão criado e o componente são irmãos na árvore do DOM.&lt;/p>
&lt;p>Este comportamento padrão pode ser sobrescrito ao utilizar o atributo HTML: &lt;code>data-editable-custom-button=&amp;quot;true&amp;quot;&lt;/code>. Todavia o comportamento ainda não se encontra implementado e deve ser implementado no arquivo &lt;strong>admin-editable.js&lt;/strong> do projeto.&lt;/p>
&lt;h1 id="utilização">Utilização&lt;/h1>
&lt;p>Para ativação da solução, é necessária a importação do modulo onde ela está presente por meio da linha:&lt;/p>
&lt;pre tabindex="0">&lt;code>{% load admin_utils %}
&lt;/code>&lt;/pre>&lt;p>Então dentro da tag HTML que possui o componente editável, deve ser adicionada a linha com o seguinte esquema:&lt;/p>
&lt;pre tabindex="0">&lt;code>{% admin_editable user.is_superuser &amp;#34;&amp;lt;nome do app&amp;gt;&amp;#34; &amp;#34;&amp;lt;nome do model&amp;gt;&amp;#34; &amp;lt;id no model&amp;gt; %}
&lt;/code>&lt;/pre>&lt;p>Segue um exemplo de implementação utilizado no arquivo &lt;strong>secoes.html&lt;/strong> do projeto:&lt;/p>
&lt;pre tabindex="0">&lt;code>{% admin_editable user.is_superuser &amp;#34;conteudos&amp;#34; &amp;#34;secao&amp;#34; secao.id %}
&lt;/code>&lt;/pre>&lt;h1 id="sobrescrevendo-o-comportamento-padrão">Sobrescrevendo o comportamento padrão&lt;/h1>
&lt;p>É possível sobrescrever o comportamento relacionado ao posicionamento do botão no elemento. Os atributos utilizados para isso são:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>data-edit-button-right&lt;/code>&lt;/strong> - Equivalente à propriedade right do CSS. Deve ser uma valor inteiro. Ex: &lt;code>data-edit-button-right=&amp;quot;15&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>data-edit-button-left&lt;/code>&lt;/strong> - Equivalente à propriedade left do CSS. Deve ser uma valor inteiro. Ex: &lt;code>data-edit-button-left=&amp;quot;15&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>data-edit-button-top&lt;/code>&lt;/strong> - Equivalente à propriedade top do CSS. Deve ser uma valor inteiro. Ex: &lt;code>data-edit-button-top=&amp;quot;15&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>data-edit-button-bottom&lt;/code>&lt;/strong> - Equivalente à propriedade bottom do CSS. Deve ser uma valor inteiro. Ex: &lt;code>data-edit-button-bottom=&amp;quot;15&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Também é possível utilizar o atributo &lt;code>data-editable-custom-button=&amp;quot;true&amp;quot;&lt;/code> para cancelar o comportamento padrão e tornar possível a implementação de um botão personalizado. Para isso, um botão com a classe &lt;code>button-editable&lt;/code> deve ser colocado dentro deste componente com &lt;code>display: none&lt;/code> no CSS.&lt;/p></description></item><item><title>Docs: Configuração do VS Code</title><link>https://vinigama.github.io/pt/docs/tutoriais/trabalhando-com-markdown/configura%C3%A7%C3%A3o_vscode/</link><pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate><guid>https://vinigama.github.io/pt/docs/tutoriais/trabalhando-com-markdown/configura%C3%A7%C3%A3o_vscode/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Neste tutorial, vamos instalar a dependência utilizada para preview de Markdown no VS Code.&lt;/p>
&lt;/div>
&lt;h1 id="instalando">Instalando&lt;/h1>
&lt;ul>
&lt;li>Ir até a aba de extensões do VS Code ou &lt;code>ctrl+shift+X&lt;/code>&lt;/li>
&lt;li>Pesquisar por: &lt;code>Markdown All in One&lt;/code>:&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Tutoriais/images/markdown-all-in-one.jpg" alt="">&lt;/p>
&lt;ul>
&lt;li>Instalar pacote&lt;/li>
&lt;/ul>
&lt;h1 id="utilizando">Utilizando&lt;/h1>
&lt;ul>
&lt;li>Em um arquivo &lt;strong>.md&lt;/strong>, apertar a tecla &lt;code>F1&lt;/code> do teclado&lt;/li>
&lt;li>Uma aba aparecerá na parte de cima da tela&lt;/li>
&lt;li>Digitar &lt;code>&amp;gt;Markdown: Open Preview&lt;/code>, ou utilizar atalho &lt;code>ctrl+shift+V&lt;/code>&lt;/li>
&lt;li>Resultado:&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Tutoriais/images/markdown-all-in-one-resultado.jpg" alt="">&lt;/p></description></item><item><title>Docs: Em alta</title><link>https://vinigama.github.io/pt/docs/conceitos/em_alta/</link><pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate><guid>https://vinigama.github.io/pt/docs/conceitos/em_alta/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Esta página visa trazer maior clareza sobre a implementação da funcionalidade em alta&lt;/p>
&lt;/div>
&lt;h1 id="fluxo">Fluxo&lt;/h1>
&lt;h2 id="histórico">Histórico&lt;/h2>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Conceitos/images/fluxo_em_alta.png" alt="">&lt;/p>
&lt;h1 id="utilização">Utilização&lt;/h1>
&lt;p>Para acessar os conteúdos que estão em alta na plataforma, basta clicar na opção &amp;ldquo;em alta&amp;rdquo; que está localizado no canto direito superior. Após passar por esse processo, será exibido os conteúdos que estão em alta (os mais visualizados).&lt;/p>
&lt;h3 id="model">Model&lt;/h3>
&lt;p>O componente principal do funcionamento do em alta é o model &lt;strong>Visualizacao&lt;/strong>, com ele é possível fazer o relacionamento com o usuário e o conteúdo&lt;/p>
&lt;pre>&lt;code>class Visualizacao(models.Model):
objects = AltaManager()
visualizador = models.ManyToManyField(Perfil, related_name=&amp;quot;visualizador&amp;quot;)
conteudo = models.ForeignKey(
Conteudo,
on_delete=models.CASCADE,
related_name=&amp;quot;conteudo&amp;quot;,
limit_choices_to={&amp;quot;ativo&amp;quot;: True},
)
data = models.DateTimeField(auto_now_add=True)
def __str__(self):
return f&amp;quot;{self.conteudo}&amp;quot;
&lt;/code>&lt;/pre>
&lt;h3 id="manager">Manager&lt;/h3>
&lt;p>Os conteúdos que estão em alta tem uma validade de 7 dias. Todas as semanas os conteúdos que estão em alta na plataforma são resetados através do manager que possui uma função para filtrar os models que estão mais de 7 dias dentro do banco de dados.&lt;/p>
&lt;pre>&lt;code>class AltaManager(models.Manager):
def select_old(self):
seven_days_ago = timezone.now() - timedelta(days=7)
return self.filter(data__lt=seven_days_ago)
&lt;/code>&lt;/pre>
&lt;p>Para a função ser executada basta rodar o seguinte código no shell:&lt;/p>
&lt;pre>&lt;code>Visualizacao.objects.select_old().delete()&lt;/code>&lt;/pre></description></item><item><title>Docs: Histórico de conteúdos visualizados</title><link>https://vinigama.github.io/pt/docs/conceitos/historico_conteudo/</link><pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate><guid>https://vinigama.github.io/pt/docs/conceitos/historico_conteudo/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Esta página visa trazer maior clareza sobre a implementação do histórico de conteúdos visualizados&lt;/p>
&lt;/div>
&lt;h1 id="fluxo">Fluxo&lt;/h1>
&lt;h2 id="histórico">Histórico&lt;/h2>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Conceitos/images/fluxo_historico_conteudos.png" alt="">&lt;/p>
&lt;h1 id="utilização">Utilização&lt;/h1>
&lt;p>Para acessar o histórico dos conteúdos visualizados, basta acessar o menu no canto direito superior e clicar na opção histórico. Após passar por esse processo, será exibido os conteúdos visualizados.&lt;/p>
&lt;p>Na tela de exibição de conteúdo contém duas funcionalidades, sendo elas:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Search bar:&lt;/strong> campo input para preencher o nome do conteúdo&lt;/li>
&lt;li>&lt;strong>Limpar histórico:&lt;/strong> botão para limpar o histórico&lt;/li>
&lt;/ul>
&lt;h3 id="model">Model&lt;/h3>
&lt;p>O componente principal do funcionamento do histórico é o model &lt;strong>Historico&lt;/strong>, com ele é possível fazer o relacionamento com o usuário e o conteúdo&lt;/p>
&lt;pre>&lt;code>`class Historico(models.Model):
visualizador = models.ManyToManyField(Perfil, related_name=&amp;quot;+&amp;quot;)
conteudo = models.ForeignKey(
Conteudo,
on_delete=models.CASCADE,
limit_choices_to={&amp;quot;ativo&amp;quot;: True},
related_name=&amp;quot;+&amp;quot;,
)
data = models.DateTimeField(auto_now_add=True)
def __str__(self):
return f&amp;quot;{self.conteudo}&amp;quot;`&lt;/code>&lt;/pre></description></item><item><title>Docs: Telas para edição, inclusão e exclusão de conteúdo - Administrador</title><link>https://vinigama.github.io/pt/docs/conceitos/edicao_exclusao_inclusao_conteudo/</link><pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate><guid>https://vinigama.github.io/pt/docs/conceitos/edicao_exclusao_inclusao_conteudo/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Esta página visa trazer maior clareza sobre a implementação de funções chave da aplicação, referentes aos processos de aceitação de conteúdo postado, aceitação de edição em conteúdo postado e aceitação de exclusão de conteúdo postado.&lt;/p>
&lt;/div>
&lt;h1 id="fluxo">Fluxo&lt;/h1>
&lt;h2 id="inclusão">Inclusão&lt;/h2>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Conceitos/images/fluxo_inclusao_conteudo.png" alt="">&lt;/p>
&lt;h2 id="edição">Edição&lt;/h2>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Conceitos/images/fluxo_edicao_conteudo.png" alt="">&lt;/p>
&lt;h2 id="exclusão">Exclusão&lt;/h2>
&lt;p>&lt;img src="https://vinigama.github.io/pt/docs/Conceitos/images/fluxo_exclusao_conteudo.png" alt="">&lt;/p>
&lt;h1 id="utilização">Utilização&lt;/h1>
&lt;p>O Model &lt;code>RequisicaoFormulario&lt;/code> é o componente resposável pela administração destas requisições. Por meio do método &lt;code>aceita_requisicao&lt;/code>, é possível permitir que o fluxo ocorra por completo, sendo assim, quando a o método &lt;code>aceita_requisicao&lt;/code> é chamado, o fluxo de aceitação da requisição é seguido.&lt;/p>
&lt;p>As requisições feitas pelo Aluno Tutor ficam centralizadas no painel de administração do Django. Estas requisições podem ser aceita pela Action personalizada &lt;code>Aceitar solicitação&lt;/code>, ou podem ser visualizadas de maneira mais detalhada ao ativar o botão &lt;code>Verificar solicitação&lt;/code>.&lt;/p>
&lt;p>O botão &lt;code>Verificar solicitação&lt;/code> leva a uma View responsável pelo roteamento da requisição. Para mais detalhes, verificar a view &lt;code>router_requisicao&lt;/code> presente do Django App &lt;code>requisicoes&lt;/code>.&lt;/p></description></item><item><title>Docs: Conceitos básicos de Markdown</title><link>https://vinigama.github.io/pt/docs/tutoriais/trabalhando-com-markdown/conceitos_basicos/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://vinigama.github.io/pt/docs/tutoriais/trabalhando-com-markdown/conceitos_basicos/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Este página possui diversos exemplos de utilização do Markdown. Para verificar o código vá ao diretório do Github: &lt;strong>content &amp;gt; pt &amp;gt; docs &amp;gt; Trabalhando com Markdown &amp;gt; conceitos_basicos.md&lt;/strong>&lt;/p>
&lt;/div>
&lt;p>Text can be &lt;strong>bold&lt;/strong>, &lt;em>italic&lt;/em>, or &lt;del>strikethrough&lt;/del>. &lt;a href="https://gohugo.io">Links&lt;/a> should be blue with no underlines (unless hovered over).&lt;/p>
&lt;p>There should be whitespace betweenss paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p>
&lt;p>90&amp;rsquo;s four loko seitan photo booth gochujang freegan tumeric listicle fam ugh humblebrag. Bespoke leggings gastropub, biodiesel brunch pug fashion axe meh swag art party neutra deep v chia. Enamel pin fanny pack knausgaard tofu, artisan cronut hammock meditation occupy master cleanse chartreuse lumbersexual. Kombucha kogi viral truffaut synth distillery single-origin coffee ugh slow-carb marfa selfies. Pitchfork schlitz semiotics fanny pack, ugh artisan vegan vaporware hexagon. Polaroid fixie post-ironic venmo wolf ramps &lt;strong>kale chips&lt;/strong>.&lt;/p>
&lt;blockquote>
&lt;p>There should be no margin above this first sentence.&lt;/p>
&lt;p>Blockquotes should be a lighter gray with a border along the left side in the secondary color.&lt;/p>
&lt;p>There should be no margin below this final sentence.&lt;/p>
&lt;/blockquote>
&lt;h2 id="first-header-2">First Header 2&lt;/h2>
&lt;p>This is a normal paragraph following a header. Knausgaard kale chips snackwave microdosing cronut copper mug swag synth bitters letterpress glossier &lt;strong>craft beer&lt;/strong>. Mumblecore bushwick authentic gochujang vegan chambray meditation jean shorts irony. Viral farm-to-table kale chips, pork belly palo santo distillery activated charcoal aesthetic jianbing air plant woke lomo VHS organic. Tattooed locavore succulents heirloom, small batch sriracha echo park DIY af. Shaman you probably haven&amp;rsquo;t heard of them copper mug, crucifix green juice vape &lt;em>single-origin coffee&lt;/em> brunch actually. Mustache etsy vexillologist raclette authentic fam. Tousled beard humblebrag asymmetrical. I love turkey, I love my job, I love my friends, I love Chardonnay!&lt;/p>
&lt;p>Deae legum paulatimque terra, non vos mutata tacet: dic. Vocant docuique me plumas fila quin afuerunt copia haec o neque.&lt;/p>
&lt;p>On big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.&lt;/p>
&lt;p>Scenester tumeric pickled, authentic crucifix post-ironic fam freegan VHS pork belly 8-bit yuccie PBR&amp;amp;B. &lt;strong>I love this life we live in&lt;/strong>.&lt;/p>
&lt;h2 id="second-header-2">Second Header 2&lt;/h2>
&lt;blockquote>
&lt;p>This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;/blockquote>
&lt;h3 id="header-3">Header 3&lt;/h3>
&lt;pre tabindex="0">&lt;code>This is a code block following a header.
&lt;/code>&lt;/pre>&lt;p>Next level leggings before they sold out, PBR&amp;amp;B church-key shaman echo park. Kale chips occupy godard whatever pop-up freegan pork belly selfies. Gastropub Belinda subway tile woke post-ironic seitan. Shabby chic man bun semiotics vape, chia messenger bag plaid cardigan.&lt;/p>
&lt;h4 id="header-4">Header 4&lt;/h4>
&lt;ul>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;/ul>
&lt;h5 id="header-5">Header 5&lt;/h5>
&lt;ol>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;/ol>
&lt;h6 id="header-6">Header 6&lt;/h6>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>What&lt;/th>
&lt;th>Follows&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>There&amp;rsquo;s a horizontal rule above and below this.&lt;/p>
&lt;hr>
&lt;p>Here is an unordered list:&lt;/p>
&lt;ul>
&lt;li>Liverpool F.C.&lt;/li>
&lt;li>Chelsea F.C.&lt;/li>
&lt;li>Manchester United F.C.&lt;/li>
&lt;/ul>
&lt;p>And an ordered list:&lt;/p>
&lt;ol>
&lt;li>Michael Brecker&lt;/li>
&lt;li>Seamus Blake&lt;/li>
&lt;li>Branford Marsalis&lt;/li>
&lt;/ol>
&lt;p>And an unordered task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Create a Hugo theme&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add task lists to it&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Take a vacation&lt;/li>
&lt;/ul>
&lt;p>And a &amp;ldquo;mixed&amp;rdquo; task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Pack bags&lt;/li>
&lt;li>?&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Travel!&lt;/li>
&lt;/ul>
&lt;p>And a nested list:&lt;/p>
&lt;ul>
&lt;li>Jackson 5
&lt;ul>
&lt;li>Michael&lt;/li>
&lt;li>Tito&lt;/li>
&lt;li>Jackie&lt;/li>
&lt;li>Marlon&lt;/li>
&lt;li>Jermaine&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TMNT
&lt;ul>
&lt;li>Leonardo&lt;/li>
&lt;li>Michelangelo&lt;/li>
&lt;li>Donatello&lt;/li>
&lt;li>Raphael&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Definition lists can be used with Markdown syntax. Definition headers are bold.&lt;/p>
&lt;dl>
&lt;dt>Name&lt;/dt>
&lt;dd>Godzilla&lt;/dd>
&lt;dt>Born&lt;/dt>
&lt;dd>1952&lt;/dd>
&lt;dt>Birthplace&lt;/dt>
&lt;dd>Japan&lt;/dd>
&lt;dt>Color&lt;/dt>
&lt;dd>Green&lt;/dd>
&lt;/dl>
&lt;hr>
&lt;p>Tables should have bold headings and alternating shaded rows.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>If a table is too wide, it should scroll horizontally.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;th>Label&lt;/th>
&lt;th>Awards&lt;/th>
&lt;th>Songs&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;td>Epic Records&lt;/td>
&lt;td>Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical&lt;/td>
&lt;td>Wanna Be Startin&amp;rsquo; Somethin&amp;rsquo;, Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;td>Warner Brothers Records&lt;/td>
&lt;td>Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal&lt;/td>
&lt;td>Let&amp;rsquo;s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I&amp;rsquo;m a Star, Purple Rain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;td>Mercury Records&lt;/td>
&lt;td>noawardsbutthistablecelliswide&lt;/td>
&lt;td>Rhymin &amp;amp; Stealin, The New Style, She&amp;rsquo;s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Code snippets like &lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code> can be shown inline.&lt;/p>
&lt;p>Also, &lt;code>this should vertically align&lt;/code> &lt;del>&lt;code>with this&lt;/code>&lt;/del> &lt;del>and this&lt;/del>.&lt;/p>
&lt;p>Code can also be shown in a block element.&lt;/p>
&lt;pre tabindex="0">&lt;code>foo := &amp;#34;bar&amp;#34;;
bar := &amp;#34;foo&amp;#34;;
&lt;/code>&lt;/pre>&lt;p>Code can also use syntax highlighting.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">input&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#4e9a06">`var foo = &amp;#34;bar&amp;#34;;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">lexer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexers&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;javascript&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">_&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexer&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Tokenise&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">nil&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">input&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">style&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">styles&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;github&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">formatter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">New&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WithLineNumbers&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">buff&lt;/span> &lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Buffer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">formatter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Format&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">style&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.
&lt;/code>&lt;/pre>&lt;p>Inline code inside table cells should still be distinguishable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Language&lt;/th>
&lt;th>Code&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Javascript&lt;/td>
&lt;td>&lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ruby&lt;/td>
&lt;td>&lt;code>foo = &amp;quot;bar&amp;quot;{&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Small images should be shown at their actual size.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/240px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>Large images should always scale down and fit in the content container.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/1024px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>&lt;em>The photo above of the Spruce Picea abies shoot with foliage buds: Bjørn Erik Pedersen, CC-BY-SA.&lt;/em>&lt;/p>
&lt;h2 id="components">Components&lt;/h2>
&lt;h3 id="alerts">Alerts&lt;/h3>
&lt;p>
&lt;div class="alert alert-primary" role="alert">
This is an alert.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title and &lt;strong>Markdown&lt;/strong>.
&lt;/div>
&lt;div class="alert alert-success" role="alert">
This is a successful alert.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
This is a warning.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
This is a warning with a title.
&lt;/div>
&lt;/p>
&lt;h2 id="another-heading">Another Heading&lt;/h2>
&lt;p>Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;h3 id="this-document">This Document&lt;/h3>
&lt;p>Inguina genus: Anaphen post: lingua violente voce suae meus aetate diversi. Orbis unam nec flammaeque status deam Silenum erat et a ferrea. Excitus rigidum ait: vestro et Herculis convicia: nitidae deseruit coniuge Proteaque adiciam &lt;em>eripitur&lt;/em>? Sitim noceat signa &lt;em>probat quidem&lt;/em>. Sua longis &lt;em>fugatis&lt;/em> quidem genae.&lt;/p>
&lt;h3 id="pixel-count">Pixel Count&lt;/h3>
&lt;p>Tilde photo booth wayfarers cliche lomo intelligentsia man braid kombucha vaporware farm-to-table mixtape portland. PBR&amp;amp;B pickled cornhole ugh try-hard ethical subway tile. Fixie paleo intelligentsia pabst. Ennui waistcoat vinyl gochujang. Poutine salvia authentic affogato, chambray lumbersexual shabby chic.&lt;/p>
&lt;h3 id="contact-info">Contact Info&lt;/h3>
&lt;p>Plaid hell of cred microdosing, succulents tilde pour-over. Offal shabby chic 3 wolf moon blue bottle raw denim normcore poutine pork belly.&lt;/p>
&lt;h3 id="external-links">External Links&lt;/h3>
&lt;p>Stumptown PBR&amp;amp;B keytar plaid street art, forage XOXO pitchfork selvage affogato green juice listicle pickled everyday carry hashtag. Organic sustainable letterpress sartorial scenester intelligentsia swag bushwick. Put a bird on it stumptown neutra locavore. IPhone typewriter messenger bag narwhal. Ennui cold-pressed seitan flannel keytar, single-origin coffee adaptogen occupy yuccie williamsburg chillwave shoreditch forage waistcoat.&lt;/p>
&lt;pre tabindex="0">&lt;code>This is the final element on the page and there should be no margin below this.
&lt;/code>&lt;/pre></description></item></channel></rss>