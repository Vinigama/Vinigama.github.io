<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IF-Study – Conceitos</title><link>https://vinigama.github.io/pt/docs/conceitos/</link><description>Recent content in Conceitos on IF-Study</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://vinigama.github.io/pt/docs/conceitos/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Seção Comentário</title><link>https://vinigama.github.io/pt/docs/conceitos/aba_comentario/</link><pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate><guid>https://vinigama.github.io/pt/docs/conceitos/aba_comentario/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>A seção &lt;strong>Comentário&lt;/strong> na exibição do conteúdo foi criada para que o criador do conteúdo e os alunos possam utilizar esse meio como uma interação.&lt;/p>
&lt;/div>
&lt;h1 id="conceito-geral">Conceito Geral&lt;/h1>
&lt;p>O objetivo da aba comentários na exibição do conteúdo é trazer uma interação relacionado ao conteúdo. Todos os espectadores podem fazer comentários e também responder outros comentários. O espectador que criar comentário pode apagar o seu próprio comentário e também pode sinalizar e atribuir &lt;code>like/dislike&lt;/code> nos outros comentários.&lt;/p>
&lt;p>Logo abaixo da exibição do conteúdo, irá ter uma barra de comentários e um botão enviar desativado, quando o espectador digitar algo na barra de comentários o botão ficará ativado. O comentário digitado precisa possuir no mínimo 1 caractere e no máximo 255 caractere, se o comentário não atingir o tamanho proposto é exibido um alerta.&lt;/p>
&lt;h1 id="benefícios">Benefícios&lt;/h1>
&lt;p>Benefícios de deixar comentários em outros vídeos:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Você se estabelece como um especialista.&lt;/strong> Se seus comentários forem bem escritos e cheios de informações úteis, outras pessoas tomarão nota do seu conhecimento e talvez pedirão mais conselhos.&lt;/li>
&lt;li>&lt;strong>Você se conecta com novas pessoas.&lt;/strong> Comentar vídeos é uma maneira gratuita e rápida de fazer com que sua voz seja ouvida por um novo público.&lt;/li>
&lt;li>&lt;strong>Você aumentará suas visualizações de vídeo e visualizações de perfil.&lt;/strong> Se você disser algo interessante e único, outros espectadores clicarão em seu perfil, consumirão seus conteúdos.&lt;/li>
&lt;/ul>
&lt;h1 id="funções">Funções&lt;/h1>
&lt;p>Para construir a seção comentário, foi necessário as seguintes funções:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>$(&amp;quot;#input-comentario&amp;quot;).keyup(function()})&lt;/strong> - Funcionalidade para ativar o botão enviar quando um caractere for digitado no &lt;code>input text&lt;/code> comentário;&lt;/li>
&lt;li>&lt;strong>function adicionarComentario(comentario, usuario, comentarioId)}&lt;/strong> - Função para adicionar um card comentário contendo o nome do usuário e comentário dinamicamente dentro da &lt;code>div secao-comentario&lt;/code>;&lt;/li>
&lt;li>&lt;strong>function alertaComentario(text)&lt;/strong> - Exibi um modal de alerta com text de acordo que passar como parâmetro;&lt;/li>
&lt;li>&lt;strong>$( &amp;ldquo;#enviar_comentario&amp;rdquo; ).click(function()});&lt;/strong> - Funcionalidade que envia para o banco de dados o comentário via &lt;code>AJAX&lt;/code>. Essa funcionalidade possui restrições de caracteres, o tamanho de caracteres que ser maior que 1 e menor que 255, se não atingir encaixar no tamanho proposto é chamado a &lt;code>function alertaComentario(text)&lt;/code>;&lt;/li>
&lt;li>&lt;strong>function likeComentario(elem)&lt;/strong> - Função para vincular o usuário que clicou no &lt;code>button like&lt;/code> com o comentário via AJAX;&lt;/li>
&lt;li>&lt;strong>function dislikeComentario(elem)&lt;/strong> - Função para vincular o usuário que clicou no &lt;code>button dislike&lt;/code> com o comentário via AJAX;&lt;/li>
&lt;li>&lt;strong>function dinamicoDislike(botaoLike, botaoDislike, quantidadeLike, quantidadeDislike)&lt;/strong> - Funcionalidade para alterar o visual do botão &lt;code>dislike&lt;/code> quando for clicado, para sinalizar que o usuário está vinculado com o botão. Outra funcionalidade da função é a quantidade de &lt;code>dislike&lt;/code> que é alterado quando houver contato com o &lt;code>button&lt;/code>&lt;/li>
&lt;li>&lt;strong>function dinamicoLike(botaoLike, botaoDislike, quantidadeLike, quantidadeDislike)&lt;/strong> - Funcionalidade para alterar o visual do botão &lt;code>like&lt;/code> quando for clicado, para sinalizar que o usuário está vinculado com o botão. Outra funcionalidade da função é a quantidade de &lt;code>like&lt;/code> que é alterado quando houver contato com o &lt;code>button&lt;/code>;&lt;/li>
&lt;li>&lt;strong>function enviarResposta(elem)&lt;/strong> - Função para adicionar resposta ao comentário;&lt;/li>
&lt;li>&lt;strong>function adicionarResposta(elem, comentario, usuario, comentarioId)&lt;/strong> - Função para adicionar um card resposta contendo o nome do usuário e a resposta;&lt;/li>
&lt;li>&lt;strong>function responder(elem)&lt;/strong> - Quando o usuário clicar no &lt;code>responder&lt;/code> em um comentário é exibido o &lt;code>input text resposta&lt;/code>&lt;/li>
&lt;li>&lt;strong>function ajaxSend(data, url)&lt;/strong> - Requisição AJAX. Essa funcionalidade é composta pela função AJAX do Jquery para fazer requisições assíncronas;&lt;/li>
&lt;li>&lt;strong>function deletarComentario(elem, id)&lt;/strong> - Função para deletar o comentário. Quando o usuário clicar no botão deletar é exibido um &lt;code>modal&lt;/code>, confirmando se realmente ele quer deletar, quando ele clicar em sim, o &lt;code>card&lt;/code> comentário é removido dinamicamente;&lt;/li>
&lt;li>&lt;strong>function accordionResposta(elem)&lt;/strong> - Função que atualiza a quantidade de respostas que está atrelado com o comentário;&lt;/li>
&lt;li>&lt;strong>function htmlEncode(str)&lt;/strong> - Funcionalidade que transforma um script para text, evitando ataque XSS;&lt;/li>
&lt;/ul></description></item><item><title>Docs: Admin Editable - Itens Editáveis por Administrador</title><link>https://vinigama.github.io/pt/docs/conceitos/admin_editable/</link><pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate><guid>https://vinigama.github.io/pt/docs/conceitos/admin_editable/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>A funcionalidade do &lt;strong>Admin Editable&lt;/strong> foi criada para facilitar o trabalho com itens que devem ser editáveis para o &lt;strong>Administrador do sistema&lt;/strong>.&lt;/p>
&lt;/div>
&lt;h1 id="conceito-geral">Conceito Geral&lt;/h1>
&lt;p>A ideia do &lt;strong>Admin Editable&lt;/strong> é abstrair o máximo possível a criação de elementos editáveis pelo administrador. A solução alcança este objetivo ao vincular este elemento, representado na tela, ao seu equivalente na tela de administração do Django.&lt;/p>
&lt;p>Por padrão, a solução criará automaticamente um botão no canto superior direito do componente onde ele é aplicado. Este comportamento padrão é possível com a criação de uma &lt;code>div&lt;/code> wrapper que será pai do componente, logo o botão criado e o componente são irmãos na árvore do DOM.&lt;/p>
&lt;p>Este comportamento padrão pode ser sobrescrito ao utilizar o atributo HTML: &lt;code>data-editable-custom-button=&amp;quot;true&amp;quot;&lt;/code>. Todavia o comportamento ainda não se encontra implementado e deve ser implementado no arquivo &lt;strong>admin-editable.js&lt;/strong> do projeto.&lt;/p>
&lt;h1 id="utilização">Utilização&lt;/h1>
&lt;p>Para ativação da solução, é necessária a importação do modulo onde ela está presente por meio da linha:&lt;/p>
&lt;pre tabindex="0">&lt;code>{% load admin_utils %}
&lt;/code>&lt;/pre>&lt;p>Então dentro da tag HTML que possui o componente editável, deve ser adicionada a linha com o seguinte esquema:&lt;/p>
&lt;pre tabindex="0">&lt;code>{% admin_editable user.is_superuser &amp;#34;&amp;lt;nome do app&amp;gt;&amp;#34; &amp;#34;&amp;lt;nome do model&amp;gt;&amp;#34; &amp;lt;id no model&amp;gt; %}
&lt;/code>&lt;/pre>&lt;p>Segue um exemplo de implementação utilizado no arquivo &lt;strong>secoes.html&lt;/strong> do projeto:&lt;/p>
&lt;pre tabindex="0">&lt;code>{% admin_editable user.is_superuser &amp;#34;conteudos&amp;#34; &amp;#34;secao&amp;#34; secao.id %}
&lt;/code>&lt;/pre>&lt;h1 id="sobrescrevendo-o-comportamento-padrão">Sobrescrevendo o comportamento padrão&lt;/h1>
&lt;p>É possível sobrescrever o comportamento relacionado ao posicionamento do botão no elemento. Os atributos utilizados para isso são:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>data-edit-button-right&lt;/code>&lt;/strong> - Equivalente à propriedade right do CSS. Deve ser uma valor inteiro. Ex: &lt;code>data-edit-button-right=&amp;quot;15&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>data-edit-button-left&lt;/code>&lt;/strong> - Equivalente à propriedade left do CSS. Deve ser uma valor inteiro. Ex: &lt;code>data-edit-button-left=&amp;quot;15&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>data-edit-button-top&lt;/code>&lt;/strong> - Equivalente à propriedade top do CSS. Deve ser uma valor inteiro. Ex: &lt;code>data-edit-button-top=&amp;quot;15&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;strong>&lt;code>data-edit-button-bottom&lt;/code>&lt;/strong> - Equivalente à propriedade bottom do CSS. Deve ser uma valor inteiro. Ex: &lt;code>data-edit-button-bottom=&amp;quot;15&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Também é possível utilizar o atributo &lt;code>data-editable-custom-button=&amp;quot;true&amp;quot;&lt;/code> para cancelar o comportamento padrão e tornar possível a implementação de um botão personalizado. Para isso, um botão com a classe &lt;code>button-editable&lt;/code> deve ser colocado dentro deste componente com &lt;code>display: none&lt;/code> no CSS.&lt;/p></description></item></channel></rss>